"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createApp = void 0;
const express_1 = __importDefault(require("express"));
const user_repository_impl_1 = require("./adapters/repositories/user-repository-impl");
const user_service_1 = require("./application/services/user.service");
const user_controller_1 = require("./adapters/controllers/user.controller");
const user_route_1 = require("./adapters/route/user.route");
const address_repositoy_impl_1 = require("./adapters/repositories/address-repositoy-impl");
const address_service_1 = require("./application/services/address.service");
const address_controller_1 = require("./adapters/controllers/address.controller");
const address_route_1 = require("./adapters/route/address.route");
const post_repository_impl_1 = require("./adapters/repositories/post-repository-impl");
const post_service_1 = require("./application/services/post.service");
const post_controller_1 = require("./adapters/controllers/post.controller");
const post_route_1 = require("./adapters/route/post.route");
const createApp = () => {
    const app = (0, express_1.default)();
    app.use(express_1.default.json());
    const userRepository = new user_repository_impl_1.UserRepositoryImpl();
    const userService = new user_service_1.UserService(userRepository);
    const userController = new user_controller_1.UserController(userService);
    const userRouter = (0, user_route_1.createUserRouter)(userController);
    const addressRepository = new address_repositoy_impl_1.AddressRepositoryImpl();
    const addressService = new address_service_1.AddressService(addressRepository);
    const addressController = new address_controller_1.AddressController(addressService);
    const addressRouter = (0, address_route_1.createAddressRouter)(addressController);
    const postRepository = new post_repository_impl_1.PostRepositoryImpl();
    const postService = new post_service_1.PostService(postRepository);
    const postController = new post_controller_1.PostController(postService);
    const postRouter = (0, post_route_1.createPostRouter)(postController);
    app.use('/users', userRouter);
    app.use('/address', addressRouter);
    app.use('/post', postRouter);
    return app;
};
exports.createApp = createApp;
